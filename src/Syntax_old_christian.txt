module Syntax_old_christian

extend lang::std::Layout;
extend lang::std::Id;

/*
 * Concrete syntax of QL
 */

start syntax Form 
  = "form" Id "{" Question* "}"; 

// TODO: question, computed question, block, if-then-else, if-then
syntax Question
  = Str Id ":" Type ("=" Expr)?
  | "{" Question* "}"
  | "if" "(" Expr ")" Question ("else" Question)?
  ; 
  
// TODO: +, -, *, /, &&, ||, !, >, <, <=, >=, ==, !=, literals (bool, int, str)
// Think about disambiguation using priorities and associativity
// and use C/Java style precedence rules (look it up on the internet)
syntax Expr 
  = "(" Expr ")"
  > left Expr Op Expr
  > Id \ "true" \ "false" // true/false are reserved keywords.
  | Int
  | Bool
  ;
  
syntax Op
  = [* / %]
  > [\- +]
  > [\< \>]
  > "\<="
  > "\>="
  > "=="
  > "&&"
  > "||"
  ;
  
syntax Type
  = "boolean"
  | "integer";  
  
lexical Str = [\"] ![\"]* [\"]; // slightly simplified;

lexical Int
  = [0 - 9]+;

lexical Bool = "true" | "false";



